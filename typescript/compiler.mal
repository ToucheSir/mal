(load-file "core_macros.mal")
(load-file "reader.mal")
;(load-file "interpreter.mal")
;(load-file "analyzer.mal")
;(load-file "codegen.mal")
(defn! compile-file [file]
  (println (read-str (str "(do " (slurp file) ")"))))

(defn! print-usage []
  (println "usage: <compiler> file-name"))

(def! -main (fn* [& args]
                 (if (> (count args) 0)
                   (let* [in-file (first args)]
                     (compile-file in-file))
                   (print-usage))))
(apply -main *ARGV*)
